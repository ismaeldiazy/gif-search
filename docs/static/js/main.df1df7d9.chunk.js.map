{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","secret.js","GifSearchApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","onClick","navigator","clipboard","writeText","getGifs","category","limit","apiKey","a","encodeURI","console","log","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifSearchApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,qBAAKC,UAAU,yCAAf,SACI,qBAAKC,IAAMF,EAAMG,IAAMJ,EAAQK,QAAU,WAAOC,UAAUC,UAAUC,UAAUP,S,uBCF5EQ,EAAO,uCAAG,WAAMC,EAAUC,EAAOC,GAAvB,uBAAAC,EAAA,6DAEdZ,EAFc,iDAEmCa,UAAUJ,GAF7C,kBAEiEC,EAFjE,oBAEkFC,GACtGG,QAAQC,IAAIf,GAHQ,SAIGgB,MAAMhB,GAJT,cAIdiB,EAJc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRxB,MAAOuB,EAAIvB,MACXC,IAAG,UAAEsB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBzB,QAXtB,kBAkBboB,GAlBa,4CAAH,0DCCRM,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GACzB,MAA0BxB,mBAAS,CAC/BkC,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPtB,EAAQC,EAAU,GCXJ,oCDYbsB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAKlB,CAAClB,IAEGmB,EDjBwBK,CAAaxB,GAAhCe,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAGpB,OACI,qCACI,mCAAOlB,EAAP,OAEEkB,GAAW,mBAAG1B,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQuB,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,a,OGoBvBW,EAlCM,WAEjB,MAAoCjD,mBAAS,CAAC,oBAA9C,mBAAOkD,EAAP,KAAmBnD,EAAnB,KAOA,OACI,qCACI,sBAAKiB,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,8CACA,cAAC,IAAD,CAASA,UAAU,iBAEvB,cAAC,EAAD,CAAajB,cAAgBA,OAIjC,6BAEQmD,EAAWd,KAAK,SAAAZ,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCxBnC2B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.df1df7d9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>    \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } onClick={ () => {navigator.clipboard.writeText(url)} }/>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\n export const getGifs = async(category, limit, apiKey) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${limit}&api_key=${apiKey}`\r\n    console.log(url);\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    // console.log(gifs);\r\n\r\n    // console.log(images);\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { apiKey } from \"../secret\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n   \r\n    useEffect( () => {\r\n        getGifs(category, 10, apiKey)\r\n        .then(imgs => {\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n \r\n    \r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","export const apiKey = 'e4Rbc8Hq9DMMjYD6rbhsFUnRdqoxGorD';","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { DiReact } from \"react-icons/di\"; \r\n\r\nconst GifSearchApp = () => {\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['Attack on Titan']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( ['Attack on Titan', ...categories]);\r\n    //     setCategories(cats => [...cats, 'Attack on Titan']);\r\n    // }\r\n\r\n    return (\r\n        <>  \r\n            <div className=\"header-block\">\r\n                <div className=\"title-block\">\r\n                    <h2>GifSearchApp</h2>\r\n                    <DiReact className=\"reactIcon\"/>\r\n                </div>\r\n                <AddCategory setCategories={ setCategories }/>\r\n            </div>\r\n\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key= { category }\r\n                            category={ category } \r\n                        />  \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifSearchApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifSearchApp from './GifSearchApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifSearchApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}